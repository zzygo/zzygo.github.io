<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>周</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-15T15:30:55.826Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>周</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>9月记录</title>
    <link href="http://example.com/2021/09/11/9%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/09/11/9%E6%9C%88%E8%AE%B0%E5%BD%95/</id>
    <published>2021-09-11T15:15:03.000Z</published>
    <updated>2021-09-15T15:30:55.826Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>9-11</p><p>高数辅导讲义-一元函数微分学(预计明天解决这章)</p><p>高数严选题-一元函数积分学（预计后天解决这章）</p><p>概率论辅导讲义-数理统计课后题</p><p>计算机网络-第二章剩个尾巴</p></li><li><p>9-12</p><p>高数辅导讲义-一元函数微分学</p><p>概率论辅导讲义-大数定律和中心极限定律课后习题</p><p>计算机网络-第三章开了个头</p></li><li><p>9-13（休息）</p><p>李林高数辅导讲义-反常积分</p><p>计算机网络-差错检测（奇偶校验和CRC）和纠正（海明码）</p></li><li><p>9-15</p><p>高数严选题-一元函数积分学</p><p>概率论-矩估计和最大似然估计课后题</p><p>计网-看到ALOHA</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;9-11&lt;/p&gt;
&lt;p&gt;高数辅导讲义-一元函数微分学(预计明天解决这章)&lt;/p&gt;
&lt;p&gt;高数严选题-一元函数积分学（预计后天解决这章）&lt;/p&gt;
&lt;p&gt;概率论辅导讲义-数理统计课后题&lt;/p&gt;
&lt;p&gt;计算机网络-第二章剩个尾巴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p</summary>
      
    
    
    
    <category term="烤岩历程" scheme="http://example.com/categories/%E7%83%A4%E5%B2%A9%E5%8E%86%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>4.10 生病记录</title>
    <link href="http://example.com/2021/04/11/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/4-10-%E7%94%9F%E7%97%85%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/04/11/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/4-10-%E7%94%9F%E7%97%85%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-11T13:42:35.000Z</published>
    <updated>2021-04-13T08:26:34.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>4-09 晚上临睡前</p><p>感觉好几天喉咙不舒服，是感冒的预兆，尽量休息好。</p></li><li><p>4-10</p><p>起床感觉喉咙有那么一米米不舒服，但是还行，随着一天时间的进展，喉咙越来越不舒服，12点就上床睡觉了。</p></li><li><p>4-11</p><p>最难受的一天， 全天睡觉，什么事都干不了。</p><p>21:46</p><p>早上醒来发现喉咙稍微好了一点点，然后鼻塞，上午和晚上鼻塞一个感觉，不是特别塞，然后到了晚上开始头疼，希望明天就能好吧。</p></li><li><p>4-12</p><p>早上和下午喉咙很难受，就是躺床上就会突然咳嗽的那种，下午睡了一觉后晚上就好多了，喉咙基本好了，鼻涕有一点点，头有一点晕。</p></li><li><p>4-13</p><p>感觉大脑还是没有恢复到没生病时的状态(大概平时70%~80%的状态)，还有身体乏力，但基本没事了，去医院做了个核酸检测，去临安万华广场吃了顿麦当劳，感觉身体没有啥异常。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;4-09 晚上临睡前&lt;/p&gt;
&lt;p&gt;感觉好几天喉咙不舒服，是感冒的预兆，尽量休息好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4-10&lt;/p&gt;
&lt;p&gt;起床感觉喉咙有那么一米米不舒服，但是还行，随着一天时间的进展，喉咙越来越不舒服，12点就上床睡觉了。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="日记" scheme="http://example.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>有区域赛银啦！太激动了</title>
    <link href="http://example.com/2021/04/03/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%9C%89%E5%8C%BA%E5%9F%9F%E8%B5%9B%E9%93%B6%E5%95%A6%EF%BC%81%E5%A4%AA%E6%BF%80%E5%8A%A8%E4%BA%86/"/>
    <id>http://example.com/2021/04/03/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%9C%89%E5%8C%BA%E5%9F%9F%E8%B5%9B%E9%93%B6%E5%95%A6%EF%BC%81%E5%A4%AA%E6%BF%80%E5%8A%A8%E4%BA%86/</id>
    <published>2021-04-03T14:54:15.000Z</published>
    <updated>2021-04-03T15:08:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在是4.3号晚上11点不到，还记得昨天还挺紧张的，内心真的非常想拿个区域赛银，因为区域赛铜和区域赛银的差距还是挺大的，而且还有两场就退役了，如果心里知道有银牌的水平但搞了块铜的话心里还是挺难受的(幸好没有发生)。</p><p>话说内心不是很想区域赛做到计算几何，毕竟万一做不出锅就是我背，但今天赛时的内心很平静，竟然没想过过不了的问题，分8类情况讨论的计算几何根据经验开eps=1e-8一发过（<del>我写了140多行，看别人代码就写40行，我是伞兵</del>），幸好过了，那就不说了，交第一发的时候根本没想到能过，毕竟分了8类鬼知道我哪里手残了，而且样例也挺弱的。结果一发就过了，我自己都不敢相信，直接站起来’喔’的一声，现在想起来还是蛮好笑的，虽然感觉这场两位大腿队友没有发挥出应有的水平，但排名103(去*99)个人感觉已经是不错的成绩了，幸好没被挤掉。</p><p>打铁还是需要自身硬鸭，如果水平高就不会发生赛后还担心被别人挤掉的事了，一切只能靠自己。</p><p>心里压力终于没这么大了，毕竟已经拿了区域银了，虽然感觉自己是铜牌水平，但队友绝对是银牌水平，感谢队友带我玩。</p><p>打完更多的是一种解放吧，终于拿银了，人生圆满了:D。</p><p>下半年加油鸭，话说5月中旬的银川就没那么大压力了，现在不知道能不能去EC，不知道银牌能不能申请一波。走一步看一步吧，hustle pay the price,如果考研内心怀疑自己就记住，you are the god, you can beat everybody.AND THE NEW!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在是4.3号晚上11点不到，还记得昨天还挺紧张的，内心真的非常想拿个区域赛银，因为区域赛铜和区域赛银的差距还是挺大的，而且还有两场就退役了，如果心里知道有银牌的水平但搞了块铜的话心里还是挺难受的(幸好没有发生)。&lt;/p&gt;
&lt;p&gt;话说内心不是很想区域赛做到计算几何，毕竟万一</summary>
      
    
    
    
    <category term="日记" scheme="http://example.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>银川延期，未来迷离</title>
    <link href="http://example.com/2021/02/25/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E9%93%B6%E5%B7%9D%E5%BB%B6%E6%9C%9F%EF%BC%8C%E6%9C%AA%E6%9D%A5%E8%BF%B7%E7%A6%BB/"/>
    <id>http://example.com/2021/02/25/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E9%93%B6%E5%B7%9D%E5%BB%B6%E6%9C%9F%EF%BC%8C%E6%9C%AA%E6%9D%A5%E8%BF%B7%E7%A6%BB/</id>
    <published>2021-02-24T20:38:34.000Z</published>
    <updated>2021-02-24T20:46:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>每场区域赛都往后调了，昆明4.3，银川5.15，沈阳目测是5.23？，那tm如果打得好有ecfinal不是要搞到6月份我acm才能停掉训练？</p><p>不知道为啥，今天想到这些就有点小压力，anyway，我觉得对付这种心态的正解就是走一步看一步，先挑出当前最紧急的事情，或者对未来贡献最大的事情去做，考研是肯定的，英语和政治是两门拉不开分的科目，况且我英语底子还行，所以6月前大概就能拿别人在英语上花的时间放在xcpc训练做题上了吧，虽然感觉现在的心态已经是想早点退役备战考研了，anyway，现在放弃难道不是神经病吗，打完ccpc到现在这段时间也训练了不少，并且从大一到现在 在算法竞赛投入了多少时间？现在放弃那你去吃屎吧fw。所以目前确定的退役之前的目标是3修+1辅：</p><p>3修：数学+408+xcpc (按优先级由高到低排序)</p><p>1辅：英语</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;每场区域赛都往后调了，昆明4.3，银川5.15，沈阳目测是5.23？，那tm如果打得好有ecfinal不是要搞到6月份我acm才能停掉训练？&lt;/p&gt;
&lt;p&gt;不知道为啥，今天想到这些就有点小压力，anyway，我觉得对付这种心态的正解就是走一步看一步，先挑出当前最紧急的事情，</summary>
      
    
    
    
    <category term="日记" scheme="http://example.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>迁移hexo博客至新电脑</title>
    <link href="http://example.com/2021/02/21/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BF%81%E7%A7%BBhexo%E5%8D%9A%E5%AE%A2%E8%87%B3%E6%96%B0%E7%94%B5%E8%84%91/"/>
    <id>http://example.com/2021/02/21/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BF%81%E7%A7%BBhexo%E5%8D%9A%E5%AE%A2%E8%87%B3%E6%96%B0%E7%94%B5%E8%84%91/</id>
    <published>2021-02-20T17:25:46.000Z</published>
    <updated>2021-02-20T17:48:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>step 1</em></strong></p><p>生成秘钥</p><ul><li><ol><li><code>cd ~./ssh</code> 用来检查有没有已经生成ssh</li></ol></li><li><ol start="2"><li><p>若没有生成过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#x27;zzynb&#x27;</span><br><span class="line">git config --global user.email &#x27;zzythebest@nb.com&#x27;</span><br><span class="line">ssh-keygen -t rsa -C &#x27;上面的邮箱&#x27;</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="3"><li>在c盘的用户目录下查看秘钥<code>.ssh/id_rsa.pub</code></li></ol></li><li><ol start="4"><li>在自己github账户setting里面添加sshkey</li></ol></li></ul><p><code>ssh -T git@github.com</code>检测是否配置成功。</p><p><del>但我没检测到配置成功也可以用啊233</del></p><p>*<strong>step 2</strong></p><ul><li><ol start="0"><li>安装nodejs和git</li></ol></li><li><ol><li>只要将五个文件拷贝在新电脑上</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scaffolds/</span><br><span class="line">source/</span><br><span class="line">themes/</span><br><span class="line">_config.yml</span><br><span class="line">package.json</span><br></pre></td></tr></table></figure></li><li><ol start="2"><li>在/blog目录下安装hexo <code>npm install -g hexo</code></li></ol></li><li><ol start="3"><li><p>耐心等待，安装之后，继续在/blog目录下执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></li></ol></li></ul><ul><li><ol start="4"><li>部署，执行命令<code>hexo g</code> <code>hexp deploy</code></li></ol></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;step 1&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生成秘钥&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd ~./ssh&lt;/code&gt; 用来检查有没有已经生成ssh&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&quot;</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>TSP问题</title>
    <link href="http://example.com/2021/02/01/dp/TSP%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/02/01/dp/TSP%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-31T18:29:14.000Z</published>
    <updated>2021-01-31T18:47:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>TSP问题（也叫作旅行商问题）是状压dp的一个最基本也是最经典的应用。</p><p>TSP问题：假设有一个旅行商人要拜访n个城市，他来选择所要走的路径，路径的限制是每个城市只能拜访一次，而且最后要回到出发的城市，选择路径的目标是要求得的路径路程为所有路径中的最小值。</p><p>首先它是个NPC问题，目前还没有多项式时间的解法。</p><p>所以我们可以用状态压缩dp，用时间复杂度<code>O(n*n*2^n)</code>的复杂度解决这个问题。</p><p>现在我们可以把问题简化，路径选择的限制不用回到出发点了，也就是找到能经过所有城市的最小路径即可。</p><p>首先初始化,<code>dp[i][j]</code>表示当前在<code>i</code>点，已经过的点集为<code>j</code>，经过路径之和的最小值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ms</span>(dp,INF);</span><br><span class="line">forn(i, k) dp[i][<span class="number">1</span>&lt;&lt;i]=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>然后就可以状压dp了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(<span class="number">1</span>&lt;&lt;k); ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; ++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[j][i]!=INF)&#123;</span><br><span class="line">            <span class="comment">//当前在点j，状态为i是有解的，也就是j是i点集中的一点，然后继续走不在点集中的点进行转移</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> three=<span class="number">0</span>; three&lt;k; ++three)&#123;</span><br><span class="line">                <span class="keyword">if</span>(((<span class="number">1</span>&lt;&lt;three)&amp;i)==<span class="number">0</span> &amp;&amp; dis[j][three]!=<span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="comment">//three点不在状态i里(没走到过)，并且j到i有边可以走</span></span><br><span class="line">                    <span class="built_in">uin</span>(dp[three][i|(<span class="number">1</span>&lt;&lt;three)],dp[j][i]+dis[j][three]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就解决了。</p><p>如果要解决TSP问题（hdu 5418），他一般是跟你说了起点，然后你只要先跑个floyd，因为点很少，假设起点是1。</p><p>接下来你状压dp一下，然后遍历所有除了起点的点<code>dp[i][(1&lt;&lt;点数) - 1] + dis[i][1]</code>，即<code>i!=1</code>，维护答案即可。</p><blockquote><p>写这个的原因是昨天打的abc的E就是TSP的裸题，我竟然一点印象都没，并且就差这题ak，后面有点烦的一个树状数组算贡献搞出来了这个TSP裸题没搞出来，就很难受。</p></blockquote><p><strong>总结：</strong></p><p>如果看到条件是<code>n = ...15,16,17,18,19,20</code>，也就是20以下很少的点数，就可以考虑状压dp一手了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;TSP问题（也叫作旅行商问题）是状压dp的一个最基本也是最经典的应用。&lt;/p&gt;
&lt;p&gt;TSP问题：假设有一个旅行商人要拜访n个城市，他来选择所要走的路径，路径的限制是每个城市只能拜访一次，而且最后要回到出发的城市，选择路径的目标是要求得的路径路程为所有路径中的最小值。&lt;/p</summary>
      
    
    
    
    <category term="xcpc" scheme="http://example.com/categories/xcpc/"/>
    
    <category term="dp" scheme="http://example.com/categories/xcpc/dp/"/>
    
    <category term="状压dp" scheme="http://example.com/categories/xcpc/dp/%E7%8A%B6%E5%8E%8Bdp/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo创建目录</title>
    <link href="http://example.com/2021/02/01/hexo/hexo%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95/"/>
    <id>http://example.com/2021/02/01/hexo/hexo%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95/</id>
    <published>2021-01-31T17:30:31.000Z</published>
    <updated>2021-01-31T17:33:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先在博客根目录下<code>hexo new page categories</code>，然后进入<code>blog/source/categories</code>,在front formatter里加入<code>type: &quot;categories&quot;</code>即可，注意冒号后有一个空格。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先在博客根目录下&lt;code&gt;hexo new page categories&lt;/code&gt;，然后进入&lt;code&gt;blog/source/categories&lt;/code&gt;,在front formatter里加入&lt;code&gt;type: &amp;quot;categories&amp;qu</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>abc+补题</title>
    <link href="http://example.com/2021/01/31/atcoder/abc+%E8%A1%A5%E9%A2%98/"/>
    <id>http://example.com/2021/01/31/atcoder/abc+%E8%A1%A5%E9%A2%98/</id>
    <published>2021-01-30T17:30:22.000Z</published>
    <updated>2021-01-31T18:21:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>打了一场abc，还行吧，该做的都做了，经典模板tsp问题竟然没想到状压，明天把他补了。</p><p>初始状态<code>dp[i][1&lt;&lt;i]=0</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp[i][j]表示当前在i点，经过点的状态为j</span></span><br><span class="line"><span class="built_in">ms</span>(dp,INF);</span><br><span class="line">forn(i, k) dp[i][<span class="number">1</span>&lt;&lt;i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(<span class="number">1</span>&lt;&lt;k); ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; ++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[j][i]!=INF)&#123;</span><br><span class="line">            <span class="comment">//当前在点j，状态为i是有解的，继续走没走到过的点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> three=<span class="number">0</span>; three&lt;k; ++three)&#123;</span><br><span class="line">                <span class="keyword">if</span>(((<span class="number">1</span>&lt;&lt;three)&amp;i)==<span class="number">0</span> &amp;&amp; dis[j][three]!=<span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="comment">//three点不在状态i里(没走到过)，并且j到i有边可以走</span></span><br><span class="line">                    <span class="built_in">uin</span>(dp[three][i|(<span class="number">1</span>&lt;&lt;three)],dp[j][i]+dis[j][three]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打了一场abc，还行吧，该做的都做了，经典模板tsp问题竟然没想到状压，明天把他补了。&lt;/p&gt;
&lt;p&gt;初始状态&lt;code&gt;dp[i][1&amp;lt;&amp;lt;i]=0&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td </summary>
      
    
    
    
    <category term="atcoder" scheme="http://example.com/categories/atcoder/"/>
    
    
  </entry>
  
</feed>
