<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>周</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-09T09:33:30.528Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>周</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018 CCPC 桂林 L.Two Ants</title>
    <link href="http://example.com/2022/01/09/2018-CCPC-%E6%A1%82%E6%9E%97-L-Two-Ants/"/>
    <id>http://example.com/2022/01/09/2018-CCPC-%E6%A1%82%E6%9E%97-L-Two-Ants/</id>
    <published>2022-01-09T09:11:16.000Z</published>
    <updated>2022-01-09T09:33:30.528Z</updated>
    
    <content type="html"><![CDATA[ <img src="../images/IMG_3896.JPG" alt="IMG_3896" style="zoom: 25%;" /><p>先输入白线的坐标，再输入黑线的坐标，问有能看到白线并且看不到黑线的区域的面积。</p><p>线段与线段位置关系分类讨论题。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eb emplace_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(), (x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rall(x) (x).rbegin(), (x).rend()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> forn(i, n) for (int i = 0; i &lt; (int)(n); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> for1(i, n) for (int i = 1; i &lt;= (int)(n); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ford(i, n) for (int i = (int)(n) - 1; i &gt;= 0; --i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fore(i, a, b) for (int i = (int)(a); i &lt;= (int)(b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(x, y) memset(x, y, sizeof(x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) int(x.size())</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fk cout&lt;&lt;<span class="meta-string">&quot;fk&quot;</span>&lt;&lt;endl</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) cerr&lt;&lt;(#x)&lt;&lt;<span class="meta-string">&#x27;=&#x27;</span>&lt;&lt;(x)&lt;&lt;endl</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug2(x,y) cerr&lt;&lt;(#x)&lt;&lt;<span class="meta-string">&#x27;=&#x27;</span>&lt;&lt;(x)&lt;&lt;<span class="meta-string">&#x27; &#x27;</span>&lt;&lt;(#y)&lt;&lt;<span class="meta-string">&#x27;=&#x27;</span>&lt;&lt;(y)&lt;&lt;endl</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="keyword">int</span>&gt; vi;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> i64;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt; <span class="keyword">bool</span> <span class="title">uin</span><span class="params">(T &amp;a, T b)</span> </span>&#123; <span class="keyword">return</span> a &gt; b ? (a = b, <span class="literal">true</span>) : <span class="literal">false</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt; <span class="keyword">bool</span> <span class="title">uax</span><span class="params">(T &amp;a, T b)</span> </span>&#123; <span class="keyword">return</span> a &lt; b ? (a = b, <span class="literal">true</span>) : <span class="literal">false</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fastio</span><span class="params">()</span></span>&#123;ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>); cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">precision</span>(<span class="number">10</span>); cout&lt;&lt;fixed;&#125;</span><br><span class="line"><span class="comment">//1.integer overflow (1e5 * 1e5) (2e9 + 2e9)</span></span><br><span class="line"><span class="comment">//2.runtime error  (divide ZERO)</span></span><br><span class="line"><span class="comment">//3.boundary condition</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-8</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &lt; eps) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">vec</span>&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    <span class="built_in">vec</span>(<span class="keyword">double</span> _x=<span class="number">0</span>,<span class="keyword">double</span> _y=<span class="number">0</span>)&#123;x=_x,y=_y;&#125;</span><br><span class="line"></span><br><span class="line">    vec <span class="keyword">operator</span> + (vec v) &#123;<span class="keyword">return</span> <span class="built_in">vec</span>(x+v.x,y+v.y);&#125;</span><br><span class="line">    vec <span class="keyword">operator</span> - (vec v) &#123;<span class="keyword">return</span> <span class="built_in">vec</span>(x-v.x,y-v.y);&#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (vec v) &#123;<span class="built_in"><span class="keyword">return</span></span> (!<span class="built_in">sgn</span>(x-v.x) &amp;&amp; !<span class="built_in">sgn</span>(y-v.y));&#125;</span><br><span class="line">    vec <span class="keyword">operator</span> * (<span class="keyword">double</span> v) &#123;<span class="keyword">return</span> <span class="built_in">vec</span>(x*v,y*v);&#125;</span><br><span class="line">    vec <span class="keyword">operator</span> / (<span class="keyword">double</span> v) &#123;<span class="keyword">return</span> <span class="built_in">vec</span>(x/v,y/v);&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> * (vec v) &#123;<span class="keyword">return</span> x*v.x + y*v.y;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len</span><span class="params">()</span>     </span>&#123;<span class="keyword">return</span> <span class="built_in">hypot</span>(x,y);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">len_sqr</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> x*x + y*y;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//逆时针旋转</span></span><br><span class="line">    <span class="function">vec <span class="title">rot</span><span class="params">(<span class="keyword">double</span> c)</span>   </span>&#123;<span class="keyword">return</span> <span class="built_in">vec</span>(x*<span class="built_in">cos</span>(c)-y*<span class="built_in">sin</span>(c),x*<span class="built_in">sin</span>(c)+y*<span class="built_in">cos</span>(c));&#125;</span><br><span class="line">    <span class="function">vec <span class="title">trunc</span><span class="params">(<span class="keyword">double</span> l)</span> </span>&#123;<span class="keyword">return</span> (*<span class="keyword">this</span>) * l / <span class="built_in">len</span>();&#125;</span><br><span class="line">    <span class="function">vec <span class="title">rot90</span><span class="params">()</span>         </span>&#123;<span class="keyword">return</span> <span class="built_in">vec</span>(-y,x);&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//叉积</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cross</span><span class="params">(vec a,vec b)</span> </span>&#123;<span class="keyword">return</span> a.x*b.y - a.y*b.x;&#125;</span><br><span class="line"><span class="comment">//判断点是否在线段上(包含端点)</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">point_on_segment</span><span class="params">(vec p,vec a,vec b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sgn</span>( <span class="built_in">cross</span>(b-a,p-a) ) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>( (p-a)*(p-b) ) &lt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断线段ab,pq间是否有交点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">has_intersection</span><span class="params">(vec a,vec b,vec p,vec q)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> d1 = <span class="built_in">sgn</span>( <span class="built_in">cross</span>(b-a,p-a) ),d2 = <span class="built_in">sgn</span>( <span class="built_in">cross</span>(b-a,q-a) );</span><br><span class="line">    <span class="keyword">int</span> d3 = <span class="built_in">sgn</span>( <span class="built_in">cross</span>(q-p,a-p) ),d4 = <span class="built_in">sgn</span>( <span class="built_in">cross</span>(q-p,b-p) );</span><br><span class="line">    <span class="keyword">if</span>( d1 * d2 &lt; <span class="number">0</span> &amp;&amp; d3 * d4 &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//有交点，且交点不在端点</span></span><br><span class="line">    <span class="keyword">if</span>( ( d1 == <span class="number">0</span> &amp;&amp; <span class="built_in">point_on_segment</span>(p,a,b) )||</span><br><span class="line">       ( d2 == <span class="number">0</span> &amp;&amp; <span class="built_in">point_on_segment</span>(q,a,b) ) ||</span><br><span class="line">       ( d3 == <span class="number">0</span> &amp;&amp; <span class="built_in">point_on_segment</span>(a,p,q) ) ||</span><br><span class="line">       ( d4 == <span class="number">0</span> &amp;&amp; <span class="built_in">point_on_segment</span>(b,p,q) ))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">//重合或交点在端点上</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">//无交点</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//直线求交点,需保证p!=q,a!=b</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">line_intersection</span><span class="params">(vec a,vec b,vec p,vec q,vec &amp;o,<span class="keyword">double</span> *t=<span class="number">0</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> U=<span class="built_in">cross</span>(p-a,q-p);</span><br><span class="line">    <span class="keyword">double</span> D=<span class="built_in">cross</span>(b-a,q-p);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">sgn</span>(D) == <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">sgn</span>(U)==<span class="number">0</span> ? <span class="number">2</span> : <span class="number">0</span>; <span class="comment">//重叠|平行</span></span><br><span class="line">    o = a + (b-a) * (U/D);</span><br><span class="line">    <span class="keyword">if</span>(t) *t = U/D;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">fastio</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a1, a2, b1, b2, c1, c2, d1, d2, tc;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tc);</span><br><span class="line">    <span class="keyword">int</span> kase = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(tc--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d%d%d%d&quot;</span>, &amp;a1, &amp;a2, &amp;b1, &amp;b2, &amp;c1, &amp;c2, &amp;d1, &amp;d2);</span><br><span class="line">        vec v1 = <span class="built_in">vec</span>(a1, a2);</span><br><span class="line">        vec v2 = <span class="built_in">vec</span>(b1, b2);</span><br><span class="line">        vec v3 = <span class="built_in">vec</span>(c1, c2);</span><br><span class="line">        vec v4 = <span class="built_in">vec</span>(d1, d2);</span><br><span class="line">        <span class="keyword">int</span> res = <span class="built_in">has_intersection</span>(v1, v2, v3, v4);</span><br><span class="line">        <span class="keyword">if</span>(res == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;Case %d: 0.000\n&quot;</span>, ++kase);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(res == <span class="number">-1</span>)&#123; <span class="comment">//交点是端点</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">sgn</span>(<span class="built_in">cross</span>(v3 - v1, v2 - v1)) &amp;&amp; !<span class="built_in">sgn</span>(<span class="built_in">cross</span>(v4 - v1, v2 - v1)))&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Case %d: 0.000\n&quot;</span>, ++kase);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(v1 == v3 || v1 == v4 || v2 == v3 || v2 == v4)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Case %d: inf\n&quot;</span>, ++kase);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">point_on_segment</span>(v1, v3, v4) || <span class="built_in">point_on_segment</span>(v2, v3, v4))&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Case %d: 0.000\n&quot;</span>, ++kase);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">point_on_segment</span>(v3, v1, v2) || <span class="built_in">point_on_segment</span>(v4, v1, v2))&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Case %d: inf\n&quot;</span>, ++kase);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            vec jiao;</span><br><span class="line">            <span class="keyword">int</span> temp;</span><br><span class="line">            temp = <span class="built_in">line_intersection</span>(v1, v2, v3, v4, jiao);</span><br><span class="line">            <span class="keyword">if</span>(temp == <span class="number">2</span>) &#123;<span class="built_in">printf</span>(<span class="string">&quot;Case %d: 0.000\n&quot;</span>, ++kase); <span class="keyword">continue</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span>(temp == <span class="number">1</span> &amp;&amp; <span class="built_in">point_on_segment</span>(jiao, v1, v2)) &#123;<span class="built_in">printf</span>(<span class="string">&quot;Case %d: inf\n&quot;</span>, ++kase); <span class="keyword">continue</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span>(temp == <span class="number">1</span> &amp;&amp; <span class="built_in">point_on_segment</span>(jiao, v3, v4)) &#123;<span class="built_in">printf</span>(<span class="string">&quot;Case %d: 0.000\n&quot;</span>, ++kase); <span class="keyword">continue</span>;&#125;</span><br><span class="line">            vec q1 = v1, q2 = v3, w1 = v2, w2 = v4;</span><br><span class="line">            <span class="keyword">int</span> res = <span class="built_in">has_intersection</span>(q1, q2, w1, w2);</span><br><span class="line">            <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(res == <span class="number">1</span>)&#123;</span><br><span class="line">                q2 = v4;</span><br><span class="line">                w2 = v3;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = <span class="built_in">line_intersection</span>(q1, q2, w1, w2, jiao);</span><br><span class="line">            <span class="built_in">assert</span>(temp != <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(temp == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;Case %d: inf\n&quot;</span>, ++kase);<span class="comment">//平行</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">sgn</span>(<span class="built_in">cross</span>(v4 - v3, jiao - v3)) != <span class="built_in">sgn</span>(<span class="built_in">cross</span>(v4 - v3, v2 - v3)) &amp;&amp; !flag)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Case %d: inf\n&quot;</span>, ++kase);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">sgn</span>(<span class="built_in">cross</span>(v4 - v3, jiao - v3)) != <span class="built_in">sgn</span>(<span class="built_in">cross</span>(v4 - v3, v1 - v3)) &amp;&amp; flag)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Case %d: inf\n&quot;</span>, ++kase);</span><br><span class="line">                &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">double</span> ans = <span class="built_in">fabs</span>(<span class="built_in">cross</span>(v1 - jiao, v2 - jiao));</span><br><span class="line">                    ans *= <span class="number">0.5</span>;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Case %d: %.9f\n&quot;</span>, ++kase, ans);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html"> &lt;img src=&quot;../images/IMG_3896.JPG&quot; alt=&quot;IMG_3896&quot; style=&quot;zoom: 25%;&quot; /&gt;

&lt;p&gt;先输入白线的坐标，再输入黑线的坐标，问有能看到白线并且看不到黑线的区域的面积。&lt;/p&gt;
&lt;p&gt;线段与线段位置关系分类讨论题。&lt;/</summary>
      
    
    
    
    <category term="计算几何题目" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E9%A2%98%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>考研经验总结</title>
    <link href="http://example.com/2022/01/08/%E8%80%83%E7%A0%94%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/01/08/%E8%80%83%E7%A0%94%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</id>
    <published>2022-01-07T16:35:35.000Z</published>
    <updated>2022-01-07T16:52:00.627Z</updated>
    
    <content type="html"><![CDATA[<p>估分300，大概率是没了，希望能到ok的工作，不然二战免不了了。</p><p>数学：</p><ol><li>计算能力太弱！y=x+2写极坐标竟然写成r = 2/(sin+cos)，我他吗头气歪来，一开始被积区域还画错，浪费了10分钟。</li><li>选择题要注重思维能力，比如对定义部分的理解，尤其是线代部分，3个选择错了2个啊。。太菜了吧</li><li>空间2线直接不知道用斯托克斯，大脑一片空白，我也是没话说</li><li>唯一的安慰是第一道大题和概率线代大题没错（应该吧）</li><li>考场上会出现大脑空白的这种情况，感觉还是考前时间都给背政治了这个错误决定，没做套卷的手感了，尤其是第二第三道大题。</li></ol><p>专业课</p><ol><li>历年真题至少3刷，说实话，最有价值的就是历年真题，模拟题啥的我觉得至少要保证做历年真题145+再去做</li><li>计组大题做的不是很好，计网大题也做的不是很好（做的太急了），选择部分数据结构太烂了，错了3个，其实正常情况也要错两个，但第一道选时间复杂度选错我是真没想到，i=0,出题人你是真的牛批。</li></ol><p>政治</p><ol><li>教训：肖四拿到手没立刻背，肖四拿到手一定要立刻背！！，可以先从时政和思修背起，马原是最好背的，因为有逻辑在那。</li><li>选择还是要考平时，这次选择部分肖八肖四基本没压中题</li></ol><p>英语</p><ol><li>没法提升了，要提升只有作文和翻译部分了，其他已经发挥出highest水平了，就英语这门科目来说已经是没有遗憾的了。</li></ol><p>作息：</p><p>也要做做家务，做做菜，洗洗衣服啥的，也没锻炼（很不好），早起应该要自己叠被子。</p><p>最后15天的作息完全被肖四大题打乱了，背到12点，8点才起来，其实这样做是不对的。根本原因是晚上还给英语一两个小时，这个做法是错误的，正确做法是等肖四一出，直接晚上背肖四从7pm到9:30pm为止，然后睡觉，早上起来再背，数学一天还是至少要给3h！这也延伸出另一个问题，就是我的408开的太晚了！并且本科阶段也学得一坨屎，7月再开确实很赶啊，最后估计只有一半卷子做了2刷，远远不够！至少09~21年真题3刷！3刷是完整的刷！不是只挑错题的刷！因为一刷有可能很多题理解的不深，或者是蒙对的！</p><p>考试结束铃响钱一定要检查自己选择题题号有没有填涂错位！大题题号也要注意有没有写错位！</p><p>may the best man win : )</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;估分300，大概率是没了，希望能到ok的工作，不然二战免不了了。&lt;/p&gt;
&lt;p&gt;数学：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;计算能力太弱！y=x+2写极坐标竟然写成r = 2/(sin+cos)，我他吗头气歪来，一开始被积区域还画错，浪费了10分钟。&lt;/li&gt;
&lt;li&gt;选择题要注重思</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数学10天集训</title>
    <link href="http://example.com/2021/12/10/%E6%95%B0%E5%AD%A610%E5%A4%A9%E9%9B%86%E8%AE%AD/"/>
    <id>http://example.com/2021/12/10/%E6%95%B0%E5%AD%A610%E5%A4%A9%E9%9B%86%E8%AE%AD/</id>
    <published>2021-12-10T14:00:20.000Z</published>
    <updated>2021-12-20T13:27:29.540Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>12-10</p><p>选择：</p><ol><li><p>经典模型： A[线性无关的方程组] = [线性无关的方程组] [根据条件构造矩阵]</p></li><li><p>中心极限定律，大量随机变量的和近似服从正态分布</p></li></ol><p>填空：</p><ol><li>计算错：上面没有<strong>平方</strong>，抄下来个平方</li><li>计算错：左边求了导，右边忘<strong>求导</strong></li></ol><p>大题：</p><ol><li>二次型配方法：先配x1,指的是先配x1^2, x1(x2 + x3)</li></ol></li><li><p>12-11</p><p>高数：</p><ol><li>对于较复杂的微分链导计算题，可以先画树形图理清关系</li></ol><p>线代：</p><ol><li>二次线正定的定理：对于任意的不为零的x向量，都有f(x1,x2,x3) &gt; 0</li></ol><p>概率：</p><ol><li>条件给出 Y = X，用处是根据分布函数的定义p{X &lt;= a, Y &lt;= b}，变为p{X &lt;= a, X &lt;= b} = p{X &lt;= min(a,b)}</li></ol></li><li><p>12-12</p><p>高数：</p><ol><li>((x^2)^3) = x^(2*3) = x^6</li><li>二线：x y    二面:yz zx xy</li></ol><p>线代：</p><ol><li>只有实对称矩阵，才有不同的特征值对应的特征向量相互正交</li><li>正交矩阵的性质：<ol><li><strong>任意两行或两列相互垂直</strong></li><li>每行或每列都是单位向量</li><li>行列式为1</li></ol></li></ol><p>概率论：</p><ol><li>分布函数的性质：<ol><li>F(-无穷) = 0， F(+无穷) = 1</li><li>F 单调不减</li></ol></li></ol></li><li><p>12-18</p><ol><li>Cov(X, Y) = EXY - EX*EY</li><li>做条件极(最)值大题时，最后带入x，y，注意别带错</li><li>二线/二面注意正负问题：二线注意区域是在左边还是右边，二面注意法向量和坐标轴夹角是锐角还是钝角</li></ol></li><li><p>12-20</p><ol><li>计算常见错误，注意检查 a * (b + c) = <strong>a</strong> * b + <strong>a</strong> * c (后面的a别落了)</li></ol></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;12-10&lt;/p&gt;
&lt;p&gt;选择：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;经典模型： A[线性无关的方程组] = [线性无关的方程组] [根据条件构造矩阵]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中心极限定律，大量随机变量的和近似服从正态分布&lt;/p&gt;
&lt;/li&gt;
&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>所有考前提醒</title>
    <link href="http://example.com/2021/12/09/%E6%89%80%E6%9C%89%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/"/>
    <id>http://example.com/2021/12/09/%E6%89%80%E6%9C%89%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/</id>
    <published>2021-12-09T11:28:02.000Z</published>
    <updated>2021-12-11T14:22:26.269Z</updated>
    
    <content type="html"><![CDATA[<p><strong>考试前手机关机，放包里！</strong></p><p>填图选择题，写大题时 注意题号，别写错地方！</p><p>last but not least,  仔细审题，细心计算，stay calm champ!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;考试前手机关机，放包里！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;填图选择题，写大题时 注意题号，别写错地方！&lt;/p&gt;
&lt;p&gt;last but not least,  仔细审题，细心计算，stay calm champ!&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>政治考前提醒</title>
    <link href="http://example.com/2021/12/05/%E6%94%BF%E6%B2%BB%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/"/>
    <id>http://example.com/2021/12/05/%E6%94%BF%E6%B2%BB%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/</id>
    <published>2021-12-05T12:37:10.000Z</published>
    <updated>2021-12-05T12:37:10.450Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>英语考前提醒</title>
    <link href="http://example.com/2021/12/05/%E8%8B%B1%E8%AF%AD%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/"/>
    <id>http://example.com/2021/12/05/%E8%8B%B1%E8%AF%AD%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/</id>
    <published>2021-12-05T12:37:03.000Z</published>
    <updated>2021-12-05T12:37:03.286Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>专业课考前提醒</title>
    <link href="http://example.com/2021/12/05/408%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/"/>
    <id>http://example.com/2021/12/05/408%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/</id>
    <published>2021-12-05T12:32:31.000Z</published>
    <updated>2021-12-20T13:25:49.432Z</updated>
    
    <content type="html"><![CDATA[<ol><li>仔细<strong>审题</strong>，比如看清大题要不要求<strong>写理由</strong></li><li>选择题45分钟要做完20道选择，一个半小时底线任务一定要做完全部选择，然后5分钟迅速涂答题卡；除了代码题可以15min，其他大题一律10min以内。</li><li>算法题先在草稿纸上写写，看看空间阿够</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;仔细&lt;strong&gt;审题&lt;/strong&gt;，比如看清大题要不要求&lt;strong&gt;写理由&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;选择题45分钟要做完20道选择，一个半小时底线任务一定要做完全部选择，然后5分钟迅速涂答题卡；除了代码题可以15min，其他大题一律10m</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Sun Dec 05 2021 08:00:00 GMT+0800 (中国标准时间)</title>
    <link href="http://example.com/2021/12/05/2021-12-05/"/>
    <id>http://example.com/2021/12/05/2021-12-05/</id>
    <published>2021-12-05T11:51:38.000Z</published>
    <updated>2021-12-05T11:59:18.182Z</updated>
    
    <content type="html"><![CDATA[<p>现在是2021年12月05号晚上7点52分，还有20天不到就考试了，心理有点小紧张，不用去算分，每科都尽自己全力，我们拥有的只有今天，把握当下，whatever happens happens。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在是2021年12月05号晚上7点52分，还有20天不到就考试了，心理有点小紧张，不用去算分，每科都尽自己全力，我们拥有的只有今天，把握当下，whatever happens happens。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>考前一个月随笔</title>
    <link href="http://example.com/2021/11/25/%E8%80%83%E5%89%8D%E4%B8%80%E4%B8%AA%E6%9C%88%E9%9A%8F%E7%AC%94/"/>
    <id>http://example.com/2021/11/25/%E8%80%83%E5%89%8D%E4%B8%80%E4%B8%AA%E6%9C%88%E9%9A%8F%E7%AC%94/</id>
    <published>2021-11-25T13:08:27.000Z</published>
    <updated>2021-11-25T13:12:58.422Z</updated>
    
    <content type="html"><![CDATA[<p>UPD 11-25</p><p>自从昨天晚上看到去浙江考试要48小时核酸，感觉今天效率直接下滑到昨天的50%。</p><p>还是经历的太少，心理太弱。</p><p>经验总结：自己&amp;父母利益放在第一位，whatever happens happens，may the best man win.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UPD 11-25&lt;/p&gt;
&lt;p&gt;自从昨天晚上看到去浙江考试要48小时核酸，感觉今天效率直接下滑到昨天的50%。&lt;/p&gt;
&lt;p&gt;还是经历的太少，心理太弱。&lt;/p&gt;
&lt;p&gt;经验总结：自己&amp;amp;父母利益放在第一位，whatever happens happens，may t</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>写数学要注意的点</title>
    <link href="http://example.com/2021/11/19/%E6%95%B0%E5%AD%A6%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/"/>
    <id>http://example.com/2021/11/19/%E6%95%B0%E5%AD%A6%E8%80%83%E5%89%8D%E6%8F%90%E9%86%92/</id>
    <published>2021-11-19T13:59:59.000Z</published>
    <updated>2021-12-18T16:07:36.503Z</updated>
    
    <content type="html"><![CDATA[<p>LETS GO CHAMP！</p><p>不变的真理：</p><ol><li><strong>计算时不要跳步！</strong></li><li>抄抄 准！</li><li>抄抄 全！</li></ol><p>选择题：</p><ol><li>特殊值</li><li>把ABCD选项一个一个带入，看哪个满足题目条件</li></ol><p><strong>高数：</strong></p><p>做完计算题，尤其是线面积分，要检查以下几个方面：</p><ol><li>有没有漏了 式子前面的<strong>系数</strong>， <strong>被积函数</strong></li><li>算积分时，注意两点别抄错 or 算错，①被积函数  ②上下限</li></ol><p><strong>线代：</strong></p><ol><li>求出特征向量后可以用 Aα = λα 验算</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;LETS GO CHAMP！&lt;/p&gt;
&lt;p&gt;不变的真理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;计算时不要跳步！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;抄抄 准！&lt;/li&gt;
&lt;li&gt;抄抄 全！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;选择题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;特殊值&lt;/li</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>11月记录</title>
    <link href="http://example.com/2021/11/03/11%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/11/03/11%E6%9C%88%E8%AE%B0%E5%BD%95/</id>
    <published>2021-11-03T03:46:30.000Z</published>
    <updated>2021-11-03T03:50:45.169Z</updated>
    
    <content type="html"><![CDATA[<p>10.30 作死喝了冰瑞幸咖啡，喉咙不舒服</p><p>10.31 仍然喉咙不舒服，以为呆家里一天就会好，结果没好</p><p>11.1 以为明天就好，晚上泡了个脚好像让感冒发出来了。</p><p>11.2 凌晨：咳嗽到怀疑人生，感觉要升天了，干咳 + 想呕。睡到下午就舒服很多了。</p><p>11.3 基本好了，头还是有点晕，还要恢复几天。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;10.30 作死喝了冰瑞幸咖啡，喉咙不舒服&lt;/p&gt;
&lt;p&gt;10.31 仍然喉咙不舒服，以为呆家里一天就会好，结果没好&lt;/p&gt;
&lt;p&gt;11.1 以为明天就好，晚上泡了个脚好像让感冒发出来了。&lt;/p&gt;
&lt;p&gt;11.2 凌晨：咳嗽到怀疑人生，感觉要升天了，干咳 + 想呕。睡到下午</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>10月记录</title>
    <link href="http://example.com/2021/10/02/10%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/10/02/10%E6%9C%88%E8%AE%B0%E5%BD%95/</id>
    <published>2021-10-02T13:33:24.000Z</published>
    <updated>2021-10-28T13:31:54.467Z</updated>
    
    <content type="html"><![CDATA[<p>UPD 10.28</p><p>应该是这个月最后一次更新了，数学进度个人觉得很满意，不用多给时间了，以后就早8到中午12给数学，下午1点到5点都给408，晚上随缘。</p><p>总结：以后下午1点到5点都给408，上午8点到12点给数学</p><p>··································</p><p>UPD 10.23</p><p>完成数据结构选择题二刷，接下来7天解决计网二刷，操作系统和计算机组成大题。11.1开始历年真题</p><p>数学一直到10月底吃透05-19真题，有心情就做做108，没心情就做做线代和概率论数一多出来的那部分。</p><p>··································</p><p>UPD 10.10</p><p>完成计算机组成原理选择题二刷和大题预览</p><p>预计可以加快进度，16号完成操作系统二刷。</p><p>数学真题进度正常，做了06~14年，明天复盘这9年真题。</p><p>································</p><p>貌似9月记录咕咕咕了一万天啊，以后随缘写了，u1s1有写复盘的时间还不如多休息或多睡些。</p><p>today 10.2 ，预测10.10之前结束组成原理整本书的二刷，包括看强化课跟着做大题。</p><p>10.10 - 10.20 搞定操作系统的二刷，包括大题（大概率自己看，因为如果再看os强化估计时间不够）</p><p>10.20-10.30 搞定22大纲新增知识点，并且开始开始计算机网络2刷。</p><p>10.4 -10.16 or 17 or 18（最晚）每天花一个小时搞定数据结构的二刷，</p><p>争取11.1号之前能搞定所有科目的二刷，最晚11.5。接下来24天搞完真题，一天选择一天大题，12年真题24天搞定。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;UPD 10.28&lt;/p&gt;
&lt;p&gt;应该是这个月最后一次更新了，数学进度个人觉得很满意，不用多给时间了，以后就早8到中午12给数学，下午1点到5点都给408，晚上随缘。&lt;/p&gt;
&lt;p&gt;总结：以后下午1点到5点都给408，上午8点到12点给数学&lt;/p&gt;
&lt;p&gt;·········</summary>
      
    
    
    
    <category term="烤岩历程" scheme="http://example.com/categories/%E7%83%A4%E5%B2%A9%E5%8E%86%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>9月记录</title>
    <link href="http://example.com/2021/09/11/9%E6%9C%88%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/09/11/9%E6%9C%88%E8%AE%B0%E5%BD%95/</id>
    <published>2021-09-11T15:15:03.000Z</published>
    <updated>2021-09-15T15:30:55.826Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>9-11</p><p>高数辅导讲义-一元函数微分学(预计明天解决这章)</p><p>高数严选题-一元函数积分学（预计后天解决这章）</p><p>概率论辅导讲义-数理统计课后题</p><p>计算机网络-第二章剩个尾巴</p></li><li><p>9-12</p><p>高数辅导讲义-一元函数微分学</p><p>概率论辅导讲义-大数定律和中心极限定律课后习题</p><p>计算机网络-第三章开了个头</p></li><li><p>9-13（休息）</p><p>李林高数辅导讲义-反常积分</p><p>计算机网络-差错检测（奇偶校验和CRC）和纠正（海明码）</p></li><li><p>9-15</p><p>高数严选题-一元函数积分学</p><p>概率论-矩估计和最大似然估计课后题</p><p>计网-看到ALOHA</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;9-11&lt;/p&gt;
&lt;p&gt;高数辅导讲义-一元函数微分学(预计明天解决这章)&lt;/p&gt;
&lt;p&gt;高数严选题-一元函数积分学（预计后天解决这章）&lt;/p&gt;
&lt;p&gt;概率论辅导讲义-数理统计课后题&lt;/p&gt;
&lt;p&gt;计算机网络-第二章剩个尾巴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p</summary>
      
    
    
    
    <category term="烤岩历程" scheme="http://example.com/categories/%E7%83%A4%E5%B2%A9%E5%8E%86%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>4.10 生病记录</title>
    <link href="http://example.com/2021/04/11/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/4-10-%E7%94%9F%E7%97%85%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/04/11/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/4-10-%E7%94%9F%E7%97%85%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-11T13:42:35.000Z</published>
    <updated>2021-04-13T08:26:34.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>4-09 晚上临睡前</p><p>感觉好几天喉咙不舒服，是感冒的预兆，尽量休息好。</p></li><li><p>4-10</p><p>起床感觉喉咙有那么一米米不舒服，但是还行，随着一天时间的进展，喉咙越来越不舒服，12点就上床睡觉了。</p></li><li><p>4-11</p><p>最难受的一天， 全天睡觉，什么事都干不了。</p><p>21:46</p><p>早上醒来发现喉咙稍微好了一点点，然后鼻塞，上午和晚上鼻塞一个感觉，不是特别塞，然后到了晚上开始头疼，希望明天就能好吧。</p></li><li><p>4-12</p><p>早上和下午喉咙很难受，就是躺床上就会突然咳嗽的那种，下午睡了一觉后晚上就好多了，喉咙基本好了，鼻涕有一点点，头有一点晕。</p></li><li><p>4-13</p><p>感觉大脑还是没有恢复到没生病时的状态(大概平时70%~80%的状态)，还有身体乏力，但基本没事了，去医院做了个核酸检测，去临安万华广场吃了顿麦当劳，感觉身体没有啥异常。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;4-09 晚上临睡前&lt;/p&gt;
&lt;p&gt;感觉好几天喉咙不舒服，是感冒的预兆，尽量休息好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4-10&lt;/p&gt;
&lt;p&gt;起床感觉喉咙有那么一米米不舒服，但是还行，随着一天时间的进展，喉咙越来越不舒服，12点就上床睡觉了。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="日记" scheme="http://example.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>有区域赛银啦！太激动了</title>
    <link href="http://example.com/2021/04/03/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%9C%89%E5%8C%BA%E5%9F%9F%E8%B5%9B%E9%93%B6%E5%95%A6%EF%BC%81%E5%A4%AA%E6%BF%80%E5%8A%A8%E4%BA%86/"/>
    <id>http://example.com/2021/04/03/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%9C%89%E5%8C%BA%E5%9F%9F%E8%B5%9B%E9%93%B6%E5%95%A6%EF%BC%81%E5%A4%AA%E6%BF%80%E5%8A%A8%E4%BA%86/</id>
    <published>2021-04-03T14:54:15.000Z</published>
    <updated>2021-04-03T15:08:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在是4.3号晚上11点不到，还记得昨天还挺紧张的，内心真的非常想拿个区域赛银，因为区域赛铜和区域赛银的差距还是挺大的，而且还有两场就退役了，如果心里知道有银牌的水平但搞了块铜的话心里还是挺难受的(幸好没有发生)。</p><p>话说内心不是很想区域赛做到计算几何，毕竟万一做不出锅就是我背，但今天赛时的内心很平静，竟然没想过过不了的问题，分8类情况讨论的计算几何根据经验开eps=1e-8一发过（<del>我写了140多行，看别人代码就写40行，我是伞兵</del>），幸好过了，那就不说了，交第一发的时候根本没想到能过，毕竟分了8类鬼知道我哪里手残了，而且样例也挺弱的。结果一发就过了，我自己都不敢相信，直接站起来’喔’的一声，现在想起来还是蛮好笑的，虽然感觉这场两位大腿队友没有发挥出应有的水平，但排名103(去*99)个人感觉已经是不错的成绩了，幸好没被挤掉。</p><p>打铁还是需要自身硬鸭，如果水平高就不会发生赛后还担心被别人挤掉的事了，一切只能靠自己。</p><p>心里压力终于没这么大了，毕竟已经拿了区域银了，虽然感觉自己是铜牌水平，但队友绝对是银牌水平，感谢队友带我玩。</p><p>打完更多的是一种解放吧，终于拿银了，人生圆满了:D。</p><p>下半年加油鸭，话说5月中旬的银川就没那么大压力了，现在不知道能不能去EC，不知道银牌能不能申请一波。走一步看一步吧，hustle pay the price,如果考研内心怀疑自己就记住，you are the god, you can beat everybody.AND THE NEW!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在是4.3号晚上11点不到，还记得昨天还挺紧张的，内心真的非常想拿个区域赛银，因为区域赛铜和区域赛银的差距还是挺大的，而且还有两场就退役了，如果心里知道有银牌的水平但搞了块铜的话心里还是挺难受的(幸好没有发生)。&lt;/p&gt;
&lt;p&gt;话说内心不是很想区域赛做到计算几何，毕竟万一</summary>
      
    
    
    
    <category term="日记" scheme="http://example.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>银川延期，未来迷离</title>
    <link href="http://example.com/2021/02/25/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E9%93%B6%E5%B7%9D%E5%BB%B6%E6%9C%9F%EF%BC%8C%E6%9C%AA%E6%9D%A5%E8%BF%B7%E7%A6%BB/"/>
    <id>http://example.com/2021/02/25/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E9%93%B6%E5%B7%9D%E5%BB%B6%E6%9C%9F%EF%BC%8C%E6%9C%AA%E6%9D%A5%E8%BF%B7%E7%A6%BB/</id>
    <published>2021-02-24T20:38:34.000Z</published>
    <updated>2021-02-24T20:46:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>每场区域赛都往后调了，昆明4.3，银川5.15，沈阳目测是5.23？，那tm如果打得好有ecfinal不是要搞到6月份我acm才能停掉训练？</p><p>不知道为啥，今天想到这些就有点小压力，anyway，我觉得对付这种心态的正解就是走一步看一步，先挑出当前最紧急的事情，或者对未来贡献最大的事情去做，考研是肯定的，英语和政治是两门拉不开分的科目，况且我英语底子还行，所以6月前大概就能拿别人在英语上花的时间放在xcpc训练做题上了吧，虽然感觉现在的心态已经是想早点退役备战考研了，anyway，现在放弃难道不是神经病吗，打完ccpc到现在这段时间也训练了不少，并且从大一到现在 在算法竞赛投入了多少时间？现在放弃那你去吃屎吧fw。所以目前确定的退役之前的目标是3修+1辅：</p><p>3修：数学+408+xcpc (按优先级由高到低排序)</p><p>1辅：英语</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;每场区域赛都往后调了，昆明4.3，银川5.15，沈阳目测是5.23？，那tm如果打得好有ecfinal不是要搞到6月份我acm才能停掉训练？&lt;/p&gt;
&lt;p&gt;不知道为啥，今天想到这些就有点小压力，anyway，我觉得对付这种心态的正解就是走一步看一步，先挑出当前最紧急的事情，</summary>
      
    
    
    
    <category term="日记" scheme="http://example.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>迁移hexo博客至新电脑</title>
    <link href="http://example.com/2021/02/21/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BF%81%E7%A7%BBhexo%E5%8D%9A%E5%AE%A2%E8%87%B3%E6%96%B0%E7%94%B5%E8%84%91/"/>
    <id>http://example.com/2021/02/21/%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9/%E8%BF%81%E7%A7%BBhexo%E5%8D%9A%E5%AE%A2%E8%87%B3%E6%96%B0%E7%94%B5%E8%84%91/</id>
    <published>2021-02-20T17:25:46.000Z</published>
    <updated>2021-02-20T17:48:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>step 1</em></strong></p><p>生成秘钥</p><ul><li><ol><li><code>cd ~./ssh</code> 用来检查有没有已经生成ssh</li></ol></li><li><ol start="2"><li><p>若没有生成过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#x27;zzynb&#x27;</span><br><span class="line">git config --global user.email &#x27;zzythebest@nb.com&#x27;</span><br><span class="line">ssh-keygen -t rsa -C &#x27;上面的邮箱&#x27;</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="3"><li>在c盘的用户目录下查看秘钥<code>.ssh/id_rsa.pub</code></li></ol></li><li><ol start="4"><li>在自己github账户setting里面添加sshkey</li></ol></li></ul><p><code>ssh -T git@github.com</code>检测是否配置成功。</p><p><del>但我没检测到配置成功也可以用啊233</del></p><p>*<strong>step 2</strong></p><ul><li><ol start="0"><li>安装nodejs和git</li></ol></li><li><ol><li>只要将五个文件拷贝在新电脑上</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scaffolds/</span><br><span class="line">source/</span><br><span class="line">themes/</span><br><span class="line">_config.yml</span><br><span class="line">package.json</span><br></pre></td></tr></table></figure></li><li><ol start="2"><li>在/blog目录下安装hexo <code>npm install -g hexo</code></li></ol></li><li><ol start="3"><li><p>耐心等待，安装之后，继续在/blog目录下执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></li></ol></li></ul><ul><li><ol start="4"><li>部署，执行命令<code>hexo g</code> <code>hexp deploy</code></li></ol></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;step 1&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生成秘钥&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd ~./ssh&lt;/code&gt; 用来检查有没有已经生成ssh&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&quot;</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>TSP问题</title>
    <link href="http://example.com/2021/02/01/dp/TSP%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/02/01/dp/TSP%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-31T18:29:14.000Z</published>
    <updated>2021-01-31T18:47:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>TSP问题（也叫作旅行商问题）是状压dp的一个最基本也是最经典的应用。</p><p>TSP问题：假设有一个旅行商人要拜访n个城市，他来选择所要走的路径，路径的限制是每个城市只能拜访一次，而且最后要回到出发的城市，选择路径的目标是要求得的路径路程为所有路径中的最小值。</p><p>首先它是个NPC问题，目前还没有多项式时间的解法。</p><p>所以我们可以用状态压缩dp，用时间复杂度<code>O(n*n*2^n)</code>的复杂度解决这个问题。</p><p>现在我们可以把问题简化，路径选择的限制不用回到出发点了，也就是找到能经过所有城市的最小路径即可。</p><p>首先初始化,<code>dp[i][j]</code>表示当前在<code>i</code>点，已经过的点集为<code>j</code>，经过路径之和的最小值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ms</span>(dp,INF);</span><br><span class="line">forn(i, k) dp[i][<span class="number">1</span>&lt;&lt;i]=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>然后就可以状压dp了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(<span class="number">1</span>&lt;&lt;k); ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; ++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[j][i]!=INF)&#123;</span><br><span class="line">            <span class="comment">//当前在点j，状态为i是有解的，也就是j是i点集中的一点，然后继续走不在点集中的点进行转移</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> three=<span class="number">0</span>; three&lt;k; ++three)&#123;</span><br><span class="line">                <span class="keyword">if</span>(((<span class="number">1</span>&lt;&lt;three)&amp;i)==<span class="number">0</span> &amp;&amp; dis[j][three]!=<span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="comment">//three点不在状态i里(没走到过)，并且j到i有边可以走</span></span><br><span class="line">                    <span class="built_in">uin</span>(dp[three][i|(<span class="number">1</span>&lt;&lt;three)],dp[j][i]+dis[j][three]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就解决了。</p><p>如果要解决TSP问题（hdu 5418），他一般是跟你说了起点，然后你只要先跑个floyd，因为点很少，假设起点是1。</p><p>接下来你状压dp一下，然后遍历所有除了起点的点<code>dp[i][(1&lt;&lt;点数) - 1] + dis[i][1]</code>，即<code>i!=1</code>，维护答案即可。</p><blockquote><p>写这个的原因是昨天打的abc的E就是TSP的裸题，我竟然一点印象都没，并且就差这题ak，后面有点烦的一个树状数组算贡献搞出来了这个TSP裸题没搞出来，就很难受。</p></blockquote><p><strong>总结：</strong></p><p>如果看到条件是<code>n = ...15,16,17,18,19,20</code>，也就是20以下很少的点数，就可以考虑状压dp一手了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;TSP问题（也叫作旅行商问题）是状压dp的一个最基本也是最经典的应用。&lt;/p&gt;
&lt;p&gt;TSP问题：假设有一个旅行商人要拜访n个城市，他来选择所要走的路径，路径的限制是每个城市只能拜访一次，而且最后要回到出发的城市，选择路径的目标是要求得的路径路程为所有路径中的最小值。&lt;/p</summary>
      
    
    
    
    <category term="xcpc" scheme="http://example.com/categories/xcpc/"/>
    
    <category term="dp" scheme="http://example.com/categories/xcpc/dp/"/>
    
    <category term="状压dp" scheme="http://example.com/categories/xcpc/dp/%E7%8A%B6%E5%8E%8Bdp/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo创建目录</title>
    <link href="http://example.com/2021/02/01/hexo/hexo%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95/"/>
    <id>http://example.com/2021/02/01/hexo/hexo%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95/</id>
    <published>2021-01-31T17:30:31.000Z</published>
    <updated>2021-01-31T17:33:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先在博客根目录下<code>hexo new page categories</code>，然后进入<code>blog/source/categories</code>,在front formatter里加入<code>type: &quot;categories&quot;</code>即可，注意冒号后有一个空格。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先在博客根目录下&lt;code&gt;hexo new page categories&lt;/code&gt;，然后进入&lt;code&gt;blog/source/categories&lt;/code&gt;,在front formatter里加入&lt;code&gt;type: &amp;quot;categories&amp;qu</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>abc+补题</title>
    <link href="http://example.com/2021/01/31/atcoder/abc+%E8%A1%A5%E9%A2%98/"/>
    <id>http://example.com/2021/01/31/atcoder/abc+%E8%A1%A5%E9%A2%98/</id>
    <published>2021-01-30T17:30:22.000Z</published>
    <updated>2021-01-31T18:21:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>打了一场abc，还行吧，该做的都做了，经典模板tsp问题竟然没想到状压，明天把他补了。</p><p>初始状态<code>dp[i][1&lt;&lt;i]=0</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp[i][j]表示当前在i点，经过点的状态为j</span></span><br><span class="line"><span class="built_in">ms</span>(dp,INF);</span><br><span class="line">forn(i, k) dp[i][<span class="number">1</span>&lt;&lt;i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;(<span class="number">1</span>&lt;&lt;k); ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;k; ++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[j][i]!=INF)&#123;</span><br><span class="line">            <span class="comment">//当前在点j，状态为i是有解的，继续走没走到过的点</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> three=<span class="number">0</span>; three&lt;k; ++three)&#123;</span><br><span class="line">                <span class="keyword">if</span>(((<span class="number">1</span>&lt;&lt;three)&amp;i)==<span class="number">0</span> &amp;&amp; dis[j][three]!=<span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="comment">//three点不在状态i里(没走到过)，并且j到i有边可以走</span></span><br><span class="line">                    <span class="built_in">uin</span>(dp[three][i|(<span class="number">1</span>&lt;&lt;three)],dp[j][i]+dis[j][three]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打了一场abc，还行吧，该做的都做了，经典模板tsp问题竟然没想到状压，明天把他补了。&lt;/p&gt;
&lt;p&gt;初始状态&lt;code&gt;dp[i][1&amp;lt;&amp;lt;i]=0&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td </summary>
      
    
    
    
    <category term="atcoder" scheme="http://example.com/categories/atcoder/"/>
    
    
  </entry>
  
</feed>
